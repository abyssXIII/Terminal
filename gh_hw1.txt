GIT Homework 1

Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.

Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
 4. Создать внешний репозиторий c названием JSON.

на github : new-create repository (копируем ssh)

 5. Клонировать репозиторий JSON на локальный компьютер.

git clone git@github.com:abyssXIII/JSON.git

 6. Внутри локального JSON создать файл “new.json”.

cd JSON/
touch new.json

 7. Добавить файл под гит.

git add new.json

 8. Закоммитить файл.

git commit -m "create new.json"

 9. Отправить файл на внешний GitHub репозиторий.

 git push


 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.

vim new.json
i
{
     "name":"kate",
     "age":"29",
     "pets":"0",
     "salary":"1000"
}
esc :wq


 11. Отправить изменения на внешний репозиторий.

git commit -am "modified new.json"
git push

 12. Создать файл preferences.json

vim preferences.json

 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, страна которую хотели бы посетить) в формате JSON.
i 
{ 
       "film":"harry potter",
       "serial":"sherlok",
       "food":"shashlik",
       "season":"summer",
       "country":"usa"


}
esc :wq

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
 vim skills.json

i

{

    "s1":"theory",
    "s2":"client-server architecture",
    "s3":"API testing",
    "s4":"dev tools",
    "s5":"Mobile testing",
    "s6":"terminal",
    "s7":"postman"


}
esc :wq

 15. Отправить сразу 2 файла на внешний репозиторий.

git add .
git commit -m "add 2 files"
git push

 16. На веб интерфейсе создать файл bug_report.json.

add file, create new file;

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

commit new file

 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
edit this file
{
        "ID": "001",
        "Заголовок": "Нажатие на кнопку 'зарегистрироваться' ведет на главную страницу сайта",
        "Шаги": [
                "1. Зайти на страницу регистрации (ссылка)",
                "2. Ввести логин и пароль",
                "3. Нажать 'Зарегистрироваться'"
        ],
        "Severity": "Critical",
        "Priority": "High",
        "Окружение":
        {
                "OS": "Windows 8 x32",
                "Браузер": "Google Chrome v 100.0.4896.127 x64"
        },
       
        "ОР": "Осуществилась регистрация",
        "ФР": "Нажатие на кнопку 'зарегистрироваться' ведет на главную страницу сайта"
        
}



 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

commit changes

 20. Синхронизировать внешний и локальный репозиторий JSON
git fetch
git pull

XML
 21. Создать внешний репозиторий c названием XML.
 22. Клонировать репозиторий XML на локальный компьютер.

cd ..
 git clone git@github.com:abyssXIII/XML.git

 23. Внутри локального XML создать файл “new.xml”.

cd XML/

touch new.xml

 24. Добавить файл под гит.

 git add new.xml

 25. Закоммитить файл.

git commit -m "create xml file"

 26. Отправить файл на внешний GitHub репозиторий.

 git push

 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.

vim new.xml
i

<?xml version="1.0" encoding="utf-8"?>
<xml>
       <name>"kate"</name>
       <age>"29"</age>
       <pets>"0"</pets>
       <salary>"1000"</salary>
       
</xml>



esc :wq



 28. Отправить изменения на внешний репозиторий.

 git commit -am "modified file xml"
 git push

 29. Создать файл preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, страна которую хотели бы посетить) в формате XML.


cat > preferences.xml
<?xml version="1.0" encoding="utf-8"?>
<xml>
       <film>"harry potter"</film>
       <serial>"sherlok"</serial>
       <food>"shashlik"</food>
       <season>"summer"</season>
       <country>"usa"</country>
</xml>
^d
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
cat > skills.xml
<?xml version="1.0" encoding="utf-8"?>
<xml>
    <s1>"theory"</s1>
    <s2>"client-server architecture"</s2>
    <s3>"API testing"</s3>
    <s4>"dev tools"</s4>
    <s5>"mobile testing"</s5>
    <s6>"terminal"</s6>
    <s7>"postman"</s7>
</xml>
^d
 32. Сделать коммит в одну строку.

 git add . && git commit -am "2 new xml files"

 33. Отправить сразу 2 файла на внешний репозиторий.

git push

 34. На веб интерфейсе создать файл bug_report.xml.
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.

edit this file
<?xml version="1.0" encoding="utf-8"?>
 <xml>
        <ID>"001"</ID>
        <Заголовок>"Нажатие на кнопку 'зарегистрироваться' ведет на главную страницу сайта"</Заголовок>
        <Шаги>
                <1>"Зайти на страницу регистрации (ссылка)"</1>
                <2>"Ввести логин и пароль"</2>
                <3>"Нажать 'Зарегистрироваться'"</3>
        </Шаги>
        <Severity>"Critical"</Severity>
        <Priority>"High"</Priority>
        <Окружение>
        
                <OS>"Windows 8 x32"</OS>
                <Браузер>"Google Chrome v 100.0.4896.127 x64"</Браузер>
        </Окружение>

        <ОР>"Осуществилась регистрация"</ОР>
        <ФР> "Нажатие на кнопку 'зарегистрироваться' ведет на главную страницу сайта"</ФР>
        
 </xml>


 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 38. Синхронизировать внешний и локальный репозиторий XML
git pull




TXT
 1. Создать внешний репозиторий c названием TXT.
 2. Клонировать репозиторий TXT на локальный компьютер.

cd ..
git clone git@github.com:abyssXIII/TXT.git

 3. Внутри локального TXT создать файл “new.txt”.

cd TXT/
touch new.txt

 4. Добавить файл под гит.

git add .

 5. Закоммитить файл.

git commit -m "add txt file"


 6. Отправить файл на внешний GitHub репозиторий.

git push


 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
cat > new.txt
name-kate
age-29
pets-0
salary-1000
^d
 8. Отправить изменения на внешний репозиторий.

git commit -am "add info into file"
git push

 9. Создать файл preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, строна которую хотели бы посетить) в формате TXT.

cat > preferences.txt

       film-harry potter
       serial-sherlok
       food-shashlik
       season-summer
       country-usa
^d

 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT

cat > skills.txt

    1)theory
    2)client-server architecture
    3)API testing
    4)dev tools
    5)mobile testing
    6)terminal
    7)postman
^d
 12. Сделать коммит в одну строку.
git add . && git commit -am "2 new txt files"

 13. Отправить сразу 2 файла на внешний репозиторий.
git push

 14. На веб интерфейсе создать файл bug_report.txt.
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.


        ID:001
        Заголовок: "Нажатие на кнопку 'зарегистрироваться' ведет на главную страницу сайта
        Шаги:   1. Зайти на страницу регистрации (ссылка)
                2. Ввести логин и пароль
                3. Нажать 'Зарегистрироваться'
        Severity: Сritical
        Priority: High
        Окружение: 
                 OS: Windows 8 x32
                 Браузер: Google Chrome v 100.0.4896.127 x64
       
        ОР: Осуществилась регистрация
        ФР: Нажатие на кнопку 'зарегистрироваться' ведет на главную страницу сайта
       



 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. Синхронизировать внешний и локальный репозиторий TXT
 git pull